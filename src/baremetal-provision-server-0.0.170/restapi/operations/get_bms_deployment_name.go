package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBmsDeploymentNameHandlerFunc turns a function with the right signature into a get bms deployment name handler
type GetBmsDeploymentNameHandlerFunc func(GetBmsDeploymentNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBmsDeploymentNameHandlerFunc) Handle(params GetBmsDeploymentNameParams) middleware.Responder {
	return fn(params)
}

// GetBmsDeploymentNameHandler interface for that can handle valid get bms deployment name params
type GetBmsDeploymentNameHandler interface {
	Handle(GetBmsDeploymentNameParams) middleware.Responder
}

// NewGetBmsDeploymentName creates a new http.Handler for the get bms deployment name operation
func NewGetBmsDeploymentName(ctx *middleware.Context, handler GetBmsDeploymentNameHandler) *GetBmsDeploymentName {
	return &GetBmsDeploymentName{Context: ctx, Handler: handler}
}

/*GetBmsDeploymentName swagger:route GET /bms/{deploymentName} getBmsDeploymentName

List baremetal servers


*/
type GetBmsDeploymentName struct {
	Context *middleware.Context
	Handler GetBmsDeploymentNameHandler
}

func (o *GetBmsDeploymentName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetBmsDeploymentNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
