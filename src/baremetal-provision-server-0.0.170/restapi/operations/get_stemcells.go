package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetStemcellsHandlerFunc turns a function with the right signature into a get stemcells handler
type GetStemcellsHandlerFunc func(GetStemcellsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStemcellsHandlerFunc) Handle(params GetStemcellsParams) middleware.Responder {
	return fn(params)
}

// GetStemcellsHandler interface for that can handle valid get stemcells params
type GetStemcellsHandler interface {
	Handle(GetStemcellsParams) middleware.Responder
}

// NewGetStemcells creates a new http.Handler for the get stemcells operation
func NewGetStemcells(ctx *middleware.Context, handler GetStemcellsHandler) *GetStemcells {
	return &GetStemcells{Context: ctx, Handler: handler}
}

/*GetStemcells swagger:route GET /stemcells getStemcells

List Baremetal server stemcells


*/
type GetStemcells struct {
	Context *middleware.Context
	Handler GetStemcellsHandler
}

func (o *GetStemcells) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetStemcellsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
