package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// BaremetalSpecs baremetal specs
// swagger:model BaremetalSpecs
type BaremetalSpecs struct {

	// whether or not this is baremetal server
	Baremetal bool `json:"baremetal,omitempty"`

	// the name of the netboot image
	BmNetbootImage string `json:"bm_netboot_image,omitempty"`

	// the name of the baremetal server stemcell
	BmStemcell string `json:"bm_stemcell,omitempty"`

	// the IP address for the BOSH director
	BoshIP string `json:"bosh_ip,omitempty"`

	// the SoftLayer datacenter name
	Datacenter string `json:"datacenter,omitempty"`

	// the domain address for the baremetal server
	Domain string `json:"domain,omitempty"`

	// a prefix string for the name of this baremetal server
	NamePrefix string `json:"name_prefix,omitempty"`

	// server spec
	ServerSpec *ServerSpec `json:"server_spec,omitempty"`

	// size
	Size int32 `json:"size,omitempty"`
}

// Validate validates this baremetal specs
func (m *BaremetalSpecs) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServerSpec(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BaremetalSpecs) validateServerSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.ServerSpec) { // not required
		return nil
	}

	if m.ServerSpec != nil {

		if err := m.ServerSpec.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
